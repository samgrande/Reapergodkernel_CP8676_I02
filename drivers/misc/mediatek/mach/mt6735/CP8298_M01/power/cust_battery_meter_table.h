#ifndef _CUST_BATTERY_METER_TABLE_H
#define _CUST_BATTERY_METER_TABLE_H

#include <mach/mt_typedefs.h>

// ============================================================
// define
// ============================================================
#define BAT_NTC_10 1
#define BAT_NTC_47 0

#if (BAT_NTC_10 == 1)
#define RBAT_PULL_UP_R             16900	
#endif

#if (BAT_NTC_47 == 1)
#define RBAT_PULL_UP_R             61900	
#endif

#define RBAT_PULL_UP_VOLT          1800



// ============================================================
// ENUM
// ============================================================

// ============================================================
// structure
// ============================================================

// ============================================================
// typedef
// ============================================================
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// ============================================================
// External Variables
// ============================================================

// ============================================================
// External function
// ============================================================

// ============================================================
// <DOD, Battery_Voltage> Table
// ============================================================

/*add by fubin1@yulong.com at 20150710 to support multi battery start.*/
#define TOTAL_BATTERY_NUMBER 3
#define ONE_BAT_STEPS_NUMBER 63

kal_int32 g_Q_MAX_POS_50[] = {2531, 2609, 2669};
kal_int32 g_Q_MAX_POS_25[] = {2533, 2638, 2651};
kal_int32 g_Q_MAX_POS_0[]  = {2563, 2587, 2252};
kal_int32 g_Q_MAX_NEG_10[] = {2556, 2637, 2239};

kal_int32 g_Q_MAX_POS_50_H_CURRENT[] = {2507, 2602, 2656};
kal_int32 g_Q_MAX_POS_25_H_CURRENT[] = {2509, 2580, 2608};
kal_int32 g_Q_MAX_POS_0_H_CURRENT[]  = {2204, 2368, 1993};
kal_int32 g_Q_MAX_NEG_10_H_CURRENT[] = {2186, 1427, 362};

kal_int32 g_battery_id_voltage[] = {500, 1050, 1500};      //CC:150,ATL:910,LS:1257
/*add by fubin1@yulong.com at 20150529 to support multi battery end.*/

/*modify by fubin1@yulong.com at 20150602 to fix battery temperature table start.*/
#if (BAT_NTC_10 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[TOTAL_BATTERY_NUMBER][17] = {
        //CC
        {
            {-20,60690},
            {-15,50040},
            {-10,39590},
            { -5,31650},
            {  0,26460},
            {  5,21350},
            { 10,17340},
            { 15,14170},
            { 20,11650},
            { 25,9632},
            { 30,8012},
            { 35,6941},
            { 40,5828},
            { 45,4916},
            { 50,4031},
            { 55,3432},
            { 60,2934}
        },
        //ATL
        {
            {-20,60690},
            {-15,50040},
            {-10,39590},
            { -5,31650},
            {  0,26460},
            {  5,21350},
            { 10,17340},
            { 15,14170},
            { 20,11650},
            { 25,9632},
            { 30,8012},
            { 35,6941},
            { 40,5828},
            { 45,4916},
            { 50,4031},
            { 55,3432},
            { 60,2934}
        },
        //LS
        {
            {-20,60690},
            {-15,50040},
            {-10,39590},
            { -5,31650},
            {  0,26460},
            {  5,21350},
            { 10,17340},
            { 15,14170},
            { 20,11650},
            { 25,9632},
            { 30,8012},
            { 35,6941},
            { 40,5828},
            { 45,4916},
            { 50,4031},
            { 55,3432},
            { 60,2934}
        }
    };
#endif
/*modify by fubin1@yulong.com at 20150602 to fix battery temperature table end.*/

#if (BAT_NTC_47 == 1)
    BATT_TEMPERATURE Batt_Temperature_Table[] = {
        {-20,483954},
        {-15,360850},
        {-10,271697},
        { -5,206463},
        {  0,158214},
        {  5,122259},
        { 10,95227},
        { 15,74730},
        { 20,59065},
        { 25,47000},
        { 30,37643},
        { 35,30334},
        { 40,24591},
        { 45,20048},
        { 50,16433},
        { 55,13539},
        { 60,11210}        
    };
#endif

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {0  , 4333},
        {2  , 4300},
        {4  , 4273},
        {6  , 4248},
        {8  , 4225},
        {10 , 4203},
        {12 , 4182},
        {14 , 4162},
        {16 , 4141},
        {18 , 4119},
        {20 , 4103},
        {22 , 4089},
        {24 , 4069},
        {25 , 4038},
        {27 , 4008},
        {29 , 3983},
        {31 , 3966},
        {33 , 3952},
        {35 , 3939},
        {37 , 3924},
        {39 , 3909},
        {41 , 3895},
        {43 , 3882},
        {45 , 3870},
        {47 , 3857},
        {49 , 3847},
        {51 , 3838},
        {53 , 3829},
        {55 , 3820},
        {57 , 3814},
        {59 , 3808},
        {61 , 3801},
        {63 , 3798},
        {65 , 3794},
        {67 , 3790},
        {69 , 3789},
        {71 , 3785},
        {73 , 3781},
        {75 , 3777},
        {76 , 3772},
        {78 , 3766},
        {80 , 3757},
        {82 , 3748},
        {84 , 3737},
        {86 , 3724},
        {88 , 3710},
        {90 , 3703},
        {92 , 3696},
        {94 , 3687},
        {95 , 3674},
        {96 , 3654},
        {96 , 3629},
        {97 , 3606},
        {97 , 3583},
        {98 , 3564},
        {98 , 3546},
        {98 , 3529},
        {98 , 3514},
        {99 , 3449},
        {99 , 3448},
        {99 , 3447},
        {100, 3444},
        {100, 3443}
    },
    //ATL
    {
        {0 , 4359},
        {2 , 4359},
        {4 , 4319},
        {6 , 4289},
        {8 , 4263},
        {9 , 4238},
        {11, 4215},
        {13, 4192},
        {15, 4171},
        {17, 4149},
        {19, 4127},
        {21, 4105},
        {23, 4090},
        {25, 4073},
        {27, 4047},
        {28, 4009},
        {30, 3979},
        {32, 3957},
        {34, 3941},
        {36, 3930},
        {38, 3918},
        {40, 3907},
        {42, 3894},
        {44, 3882},
        {46, 3870},
        {47, 3859},
        {49, 3848},
        {51, 3838},
        {53, 3829},
        {55, 3820},
        {57, 3812},
        {59, 3805},
        {61, 3798},
        {63, 3793},
        {65, 3788},
        {66, 3784},
        {68, 3781},
        {70, 3777},
        {72, 3773},
        {74, 3769},
        {76, 3764},
        {78, 3758},
        {80, 3752},
        {82, 3745},
        {83, 3738},
        {85, 3730},
        {87, 3722},
        {89, 3714},
        {90, 3708},
        {91, 3703},
        {92, 3699},
        {92, 3695},
        {93, 3690},
        {94, 3684},
        {94, 3679},
        {94, 3671},
        {95, 3663},
        {95, 3653},
        {96, 3642},
        {96, 3630},
        {96, 3618},
        {96, 3606},
        {97, 3593}
    },
    //LS
    {
        {0  , 4350},
        {2  , 4222},
        {4  , 4180},
        {7  , 4147},
        {9  , 4117},
        {11 , 4094},
        {13 , 4071},
        {16 , 4040},
        {18 , 4005},
        {20 , 3978},
        {22 , 3958},
        {24 , 3944},
        {27 , 3931},
        {29 , 3918},
        {31 , 3903},
        {33 , 3891},
        {36 , 3876},
        {38 , 3863},
        {40 , 3850},
        {42 , 3838},
        {45 , 3827},
        {47 , 3818},
        {49 , 3811},
        {51 , 3803},
        {53 , 3798},
        {56 , 3792},
        {58 , 3787},
        {60 , 3784},
        {62 , 3778},
        {65 , 3774},
        {67 , 3769},
        {69 , 3762},
        {71 , 3756},
        {73 , 3750},
        {76 , 3742},
        {78 , 3735},
        {80 , 3728},
        {82 , 3722},
        {85 , 3716},
        {87 , 3709},
        {89 , 3697},
        {91 , 3680},
        {93 , 3654},
        {96 , 3611},
        {98 , 3536},
        {100, 3392},
        {101, 3299},
        {101, 3254},
        {102, 3225},
        {102, 3202},
        {102, 3180},
        {102, 3159},
        {102, 3143},
        {102, 3128},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117},
        {102, 3117}
    }
};
        
// T1 0C 
BATTERY_PROFILE_STRUC battery_profile_t1[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {0  , 4329},
        {2  , 4294},
        {4  , 4268},
        {6  , 4244},
        {8  , 4222},
        {10 , 4200},
        {12 , 4178},
        {14 , 4159},
        {16 , 4139},
        {18 , 4119},
        {19 , 4100},
        {21 , 4085},
        {23 , 4072},
        {25 , 4047},
        {27 , 4012},
        {29 , 3984},
        {31 , 3965},
        {33 , 3948},
        {35 , 3936},
        {37 , 3921},
        {39 , 3906},
        {41 , 3892},
        {43 , 3877},
        {45 , 3864},
        {47 , 3852},
        {49 , 3841},
        {51 , 3832},
        {53 , 3823},
        {55 , 3814},
        {57 , 3808},
        {58 , 3802},
        {60 , 3795},
        {62 , 3789},
        {64 , 3785},
        {66 , 3782},
        {68 , 3779},
        {70 , 3777},
        {72 , 3772},
        {74 , 3769},
        {76 , 3765},
        {78 , 3759},
        {80 , 3752},
        {82 , 3742},
        {84 , 3734},
        {86 , 3719},
        {88 , 3706},
        {90 , 3695},
        {92 , 3690},
        {94 , 3683},
        {95 , 3670},
        {96 , 3650},
        {97 , 3624},
        {97 , 3597},
        {98 , 3576},
        {98 , 3554},
        {98 , 3536},
        {98 , 3520},
        {99 , 3509},
        {99 , 3498},
        {99 , 3488},
        {100, 3444},
        {100, 3441},
        {100, 3438}
    },
    //ATL
    {
        {0  , 4349},
        {2  , 4349},
        {4  , 4317},
        {6  , 4292},
        {8  , 4268},
        {10 , 4247},
        {12 , 4225},
        {14 , 4204},
        {15 , 4184},
        {17 , 4163},
        {19 , 4143},
        {21 , 4122},
        {23 , 4103},
        {25 , 4088},
        {27 , 4075},
        {29 , 4048},
        {31 , 4008},
        {33 , 3980},
        {35 , 3960},
        {37 , 3946},
        {39 , 3934},
        {41 , 3922},
        {43 , 3908},
        {45 , 3894},
        {46 , 3881},
        {48 , 3868},
        {50 , 3857},
        {52 , 3846},
        {54 , 3837},
        {56 , 3828},
        {58 , 3820},
        {60 , 3812},
        {62 , 3806},
        {64 , 3800},
        {66 , 3794},
        {68 , 3789},
        {70 , 3784},
        {72 , 3781},
        {74 , 3777},
        {76 , 3774},
        {77 , 3770},
        {79 , 3765},
        {81 , 3759},
        {83 , 3751},
        {85 , 3743},
        {87 , 3732},
        {89 , 3720},
        {91 , 3709},
        {93 , 3703},
        {95 , 3698},
        {97 , 3685},
        {98 , 3621},
        {99 , 3523},
        {100, 3453},
        {100, 3393},
        {100, 3342},
        {100, 3303},
        {101, 3275},
        {101, 3258},
        {101, 3248},
        {101, 3241},
        {101, 3237},
        {101, 3233}
    },
    //LS
    {
        {0  , 4350},
        {2  , 4220},
        {4  , 4197},
        {7  , 4178},
        {9  , 4158},
        {11 , 4136},
        {13 , 4114},
        {15 , 4099},
        {18 , 4082},
        {20 , 4067},
        {22 , 4035},
        {24 , 3999},
        {27 , 3971},
        {29 , 3953},
        {31 , 3937},
        {33 , 3924},
        {35 , 3913},
        {38 , 3898},
        {40 , 3882},
        {42 , 3867},
        {44 , 3856},
        {46 , 3846},
        {49 , 3838},
        {51 , 3829},
        {53 , 3821},
        {55 , 3816},
        {57 , 3808},
        {60 , 3800},
        {62 , 3795},
        {64 , 3789},
        {66 , 3785},
        {69 , 3779},
        {71 , 3776},
        {73 , 3771},
        {75 , 3763},
        {77 , 3755},
        {80 , 3744},
        {82 , 3732},
        {84 , 3720},
        {86 , 3713},
        {88 , 3708},
        {91 , 3705},
        {93 , 3700},
        {95 , 3681},
        {97 , 3617},
        {99 , 3479},
        {101, 3213},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166},
        {102, 3166}
    }
};        

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {0  , 4328},
        {2  , 4299},
        {4  , 4274},
        {6  , 4252},
        {8  , 4229},
        {10 , 4208},
        {12 , 4187},
        {14 , 4165},
        {16 , 4145},
        {18 , 4125},
        {20 , 4107},
        {22 , 4087},
        {24 , 4072},
        {26 , 4058},
        {28 , 4029},
        {30 , 4003},
        {32 , 3988},
        {34 , 3977},
        {36 , 3966},
        {38 , 3952},
        {40 , 3939},
        {41 , 3923},
        {43 , 3905},
        {45 , 3884},
        {47 , 3867},
        {49 , 3854},
        {51 , 3843},
        {53 , 3834},
        {55 , 3826},
        {57 , 3818},
        {59 , 3811},
        {61 , 3805},
        {63 , 3799},
        {65 , 3793},
        {67 , 3789},
        {69 , 3784},
        {71 , 3779},
        {73 , 3772},
        {75 , 3766},
        {77 , 3759},
        {79 , 3751},
        {81 , 3744},
        {83 , 3737},
        {85 , 3724},
        {87 , 3711},
        {89 , 3697},
        {91 , 3693},
        {93 , 3690},
        {95 , 3685},
        {97 , 3648},
        {99 , 3537},
        {101, 3329},
        {101, 3309},
        {101, 3299},
        {101, 3291},
        {101, 3285},
        {101, 3282},
        {101, 3279},
        {101, 3276},
        {101, 3275},
        {101, 3273},
        {101, 3273},
        {101, 3271}
    },
    //ATL
    {
        {0  , 4352},
        {2  , 4352},
        {4  , 4323},
        {6  , 4298},
        {8  , 4275},
        {9  , 4253},
        {11 , 4231},
        {13 , 4209},
        {15 , 4188},
        {17 , 4167},
        {19 , 4147},
        {21 , 4126},
        {23 , 4106},
        {25 , 4086},
        {27 , 4069},
        {28 , 4057},
        {30 , 4030},
        {32 , 4004},
        {34 , 3987},
        {36 , 3977},
        {38 , 3964},
        {40 , 3950},
        {42 , 3935},
        {44 , 3918},
        {45 , 3897},
        {47 , 3877},
        {49 , 3862},
        {51 , 3850},
        {53 , 3840},
        {55 , 3830},
        {57 , 3821},
        {59 , 3814},
        {61 , 3807},
        {63 , 3801},
        {64 , 3795},
        {66 , 3789},
        {68 , 3784},
        {70 , 3779},
        {72 , 3774},
        {74 , 3767},
        {76 , 3758},
        {78 , 3751},
        {80 , 3744},
        {82 , 3737},
        {83 , 3730},
        {85 , 3720},
        {87 , 3709},
        {89 , 3696},
        {91 , 3687},
        {93 , 3685},
        {95 , 3682},
        {97 , 3662},
        {99 , 3580},
        {100, 3435},
        {100, 3199},
        {100, 3161},
        {100, 3133},
        {100, 3107},
        {100, 3092},
        {100, 3084},
        {100, 3079},
        {100, 3076},
        {100, 3075}
    },
    //LS
    {
        {0  , 4351},
        {2  , 4306},
        {4  , 4282},
        {6  , 4259},
        {8  , 4237},
        {9  , 4215},
        {11 , 4194},
        {13 , 4174},
        {15 , 4153},
        {17 , 4133},
        {19 , 4113},
        {21 , 4094},
        {23 , 4076},
        {25 , 4064},
        {26 , 4041},
        {28 , 4013},
        {30 , 3994},
        {32 , 3984},
        {34 , 3973},
        {36 , 3959},
        {38 , 3945},
        {40 , 3932},
        {41 , 3916},
        {43 , 3896},
        {45 , 3873},
        {47 , 3857},
        {49 , 3844},
        {51 , 3834},
        {53 , 3825},
        {55 , 3817},
        {57 , 3810},
        {58 , 3803},
        {60 , 3797},
        {62 , 3792},
        {64 , 3787},
        {66 , 3783},
        {68 , 3779},
        {70 , 3776},
        {72 , 3774},
        {74 , 3772},
        {75 , 3769},
        {77 , 3763},
        {79 , 3756},
        {81 , 3749},
        {83 , 3740},
        {85 , 3724},
        {87 , 3709},
        {89 , 3695},
        {91 , 3691},
        {92 , 3688},
        {94 , 3684},
        {96 , 3668},
        {98 , 3578},
        {100, 3404},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103},
        {102, 3103}
    }
}; 

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {0  , 4323},
        {2  , 4295},
        {4  , 4271},
        {6  , 4248},
        {8  , 4226},
        {10 , 4206},
        {12 , 4185},
        {14 , 4162},
        {16 , 4142},
        {18 , 4123},
        {20 , 4102},
        {22 , 4083},
        {24 , 4065},
        {26 , 4047},
        {28 , 4028},
        {30 , 4011},
        {32 , 3994},
        {34 , 3980},
        {36 , 3965},
        {38 , 3950},
        {40 , 3935},
        {42 , 3922},
        {44 , 3904},
        {46 , 3882},
        {48 , 3863},
        {50 , 3852},
        {52 , 3842},
        {53 , 3832},
        {55 , 3822},
        {57 , 3816},
        {59 , 3808},
        {61 , 3800},
        {63 , 3796},
        {65 , 3790},
        {67 , 3785},
        {69 , 3780},
        {71 , 3772},
        {73 , 3758},
        {75 , 3748},
        {77 , 3739},
        {79 , 3731},
        {81 , 3723},
        {83 , 3717},
        {85 , 3704},
        {87 , 3693},
        {89 , 3678},
        {91 , 3677},
        {93 , 3673},
        {95 , 3667},
        {97 , 3614},
        {99 , 3502},
        {101, 3289},
        {101, 3275},
        {101, 3271},
        {101, 3269},
        {101, 3263},
        {101, 3257},
        {101, 3252},
        {101, 3247},
        {101, 3241},
        {101, 3235},
        {101, 3227},
        {101, 3227}
    },
    //ATL
    {
        {0  , 4349},
        {2  , 4349},
        {4  , 4321},
        {6  , 4296},
        {8  , 4273},
        {10 , 4250},
        {11 , 4228},
        {13 , 4207},
        {15 , 4185},
        {17 , 4164},
        {19 , 4144},
        {21 , 4123},
        {23 , 4103},
        {25 , 4083},
        {27 , 4064},
        {29 , 4046},
        {31 , 4028},
        {33 , 4010},
        {35 , 3993},
        {36 , 3977},
        {38 , 3962},
        {40 , 3948},
        {42 , 3933},
        {44 , 3916},
        {46 , 3893},
        {48 , 3873},
        {50 , 3860},
        {52 , 3849},
        {54 , 3839},
        {56 , 3830},
        {58 , 3821},
        {59 , 3814},
        {61 , 3807},
        {63 , 3800},
        {65 , 3794},
        {67 , 3788},
        {69 , 3783},
        {71 , 3778},
        {73 , 3769},
        {75 , 3755},
        {77 , 3747},
        {79 , 3739},
        {81 , 3732},
        {82 , 3725},
        {84 , 3717},
        {86 , 3705},
        {88 , 3695},
        {90 , 3681},
        {92 , 3678},
        {94 , 3676},
        {96 , 3669},
        {98 , 3614},
        {100, 3508},
        {100, 3293},
        {100, 3148},
        {100, 3101},
        {100, 3085},
        {100, 3077},
        {100, 3075},
        {100, 3073},
        {101, 3070},
        {101, 3069},
        {101, 3067}
    },
    //LS
    {
        {0  , 4352},
        {2  , 4317},
        {4  , 4293},
        {6  , 4270},
        {7  , 4248},
        {9  , 4226},
        {11 , 4205},
        {13 , 4184},
        {15 , 4163},
        {17 , 4142},
        {19 , 4122},
        {21 , 4103},
        {22 , 4084},
        {24 , 4065},
        {26 , 4047},
        {28 , 4030},
        {30 , 4013},
        {32 , 3997},
        {34 , 3981},
        {36 , 3966},
        {37 , 3952},
        {39 , 3938},
        {41 , 3925},
        {43 , 3912},
        {45 , 3898},
        {47 , 3875},
        {49 , 3852},
        {51 , 3840},
        {52 , 3830},
        {54 , 3821},
        {56 , 3814},
        {58 , 3806},
        {60 , 3800},
        {62 , 3794},
        {64 , 3789},
        {66 , 3784},
        {67 , 3779},
        {69 , 3775},
        {71 , 3771},
        {73 , 3765},
        {75 , 3753},
        {77 , 3748},
        {79 , 3742},
        {81 , 3735},
        {82 , 3728},
        {84 , 3719},
        {86 , 3704},
        {88 , 3689},
        {90 , 3677},
        {92 , 3676},
        {94 , 3674},
        {95 , 3671},
        {97 , 3629},
        {99 , 3510},
        {101, 3242},
        {102, 3135},
        {102, 3111},
        {102, 3094},
        {102, 3072},
        {102, 3041},
        {102, 3006},
        {102, 2977},
        {102, 2977}
    }
};        

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0},
        {0, 0}
};

// ============================================================
// <Rbat, Battery_Voltage> Table
// ============================================================
// T0 -10C
R_PROFILE_STRUC r_profile_t0[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {882 , 4333},
        {882 , 4300},
        {885 , 4273},
        {867 , 4248},
        {866 , 4225},
        {861 , 4203},
        {851 , 4182},
        {845 , 4162},
        {833 , 4141},
        {827 , 4119},
        {829 , 4103},
        {831 , 4089},
        {832 , 4069},
        {812 , 4038},
        {791 , 4008},
        {668 , 3983},
        {667 , 3966},
        {647 , 3952},
        {646 , 3939},
        {639 , 3924},
        {626 , 3909},
        {624 , 3895},
        {622 , 3882},
        {617 , 3870},
        {615 , 3857},
        {619 , 3847},
        {626 , 3838},
        {623 , 3829},
        {630 , 3820},
        {642 , 3814},
        {640 , 3808},
        {649 , 3801},
        {655 , 3798},
        {665 , 3794},
        {650 , 3790},
        {668 , 3789},
        {676 , 3785},
        {686 , 3781},
        {695 , 3777},
        {712 , 3772},
        {721 , 3766},
        {739 , 3757},
        {759 , 3748},
        {796 , 3737},
        {840 , 3724},
        {887 , 3710},
        {960 , 3703},
        {1054, 3696},
        {1197, 3687},
        {1186, 3674},
        {1137, 3654},
        {1077, 3629},
        {1017, 3606},
        {959 , 3583},
        {911 , 3564},
        {870 , 3546},
        {828 , 3529},
        {788 , 3514},
        {628 , 3449},
        {625 , 3448},
        {627 , 3447},
        {616 , 3444},
        {612 , 3443}
    },
    //ATL
    {
        {1398, 4359},
        {1398, 4359},
        {1378, 4319},
        {1352, 4289},
        {1326, 4263},
        {1301, 4238},
        {1275, 4215},
        {1255, 4192},
        {1235, 4171},
        {1215, 4149},
        {1194, 4127},
        {1177, 4105},
        {1181, 4090},
        {1184, 4073},
        {1170, 4047},
        {1122, 4009},
        {1088, 3979},
        {1067, 3957},
        {1061, 3941},
        {1062, 3930},
        {1060, 3918},
        {1057, 3907},
        {1053, 3894},
        {1051, 3882},
        {1050, 3870},
        {1050, 3859},
        {1052, 3848},
        {1054, 3838},
        {1060, 3829},
        {1063, 3820},
        {1068, 3812},
        {1073, 3805},
        {1081, 3798},
        {1091, 3793},
        {1103, 3788},
        {1121, 3784},
        {1143, 3781},
        {1173, 3777},
        {1208, 3773},
        {1253, 3769},
        {1308, 3764},
        {1372, 3758},
        {1448, 3752},
        {1532, 3745},
        {1626, 3738},
        {1715, 3730},
        {1793, 3722},
        {1787, 3714},
        {1774, 3708},
        {1762, 3703},
        {1749, 3699},
        {1740, 3695},
        {1726, 3690},
        {1716, 3684},
        {1700, 3679},
        {1680, 3671},
        {1662, 3663},
        {1636, 3653},
        {1610, 3642},
        {1580, 3630},
        {1549, 3618},
        {1518, 3606},
        {1487, 3593}
    },
    //LS
    {
        {1126, 4350},
        {1126, 4222},
        {1481, 4180},
        {1555, 4147},
        {1596, 4117},
        {1609, 4094},
        {1609, 4071},
        {1583, 4040},
        {1563, 4005},
        {1554, 3978},
        {1558, 3958},
        {1575, 3944},
        {1582, 3931},
        {1595, 3918},
        {1598, 3903},
        {1611, 3891},
        {1621, 3876},
        {1634, 3863},
        {1642, 3850},
        {1658, 3838},
        {1674, 3827},
        {1689, 3818},
        {1712, 3811},
        {1731, 3803},
        {1751, 3798},
        {1769, 3792},
        {1781, 3787},
        {1800, 3784},
        {1808, 3778},
        {1822, 3774},
        {1834, 3769},
        {1843, 3762},
        {1853, 3756},
        {1867, 3750},
        {1876, 3742},
        {1898, 3735},
        {1920, 3728},
        {1953, 3722},
        {1998, 3716},
        {2059, 3709},
        {2129, 3697},
        {2209, 3680},
        {2324, 3654},
        {2487, 3611},
        {2761, 3536},
        {3688, 3392},
        {4512, 3299},
        {4391, 3254},
        {4319, 3225},
        {4259, 3202},
        {4208, 3180},
        {4157, 3159},
        {4114, 3143},
        {4079, 3128},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117},
        {4050, 3117}
    }
};

// T1 0C
R_PROFILE_STRUC r_profile_t1[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {615 , 4329},
        {615 , 4294},
        {660 , 4268},
        {661 , 4244},
        {657 , 4222},
        {650 , 4200},
        {651 , 4178},
        {648 , 4159},
        {641 , 4139},
        {632 , 4119},
        {632 , 4100},
        {633 , 4085},
        {653 , 4072},
        {690 , 4047},
        {671 , 4012},
        {657 , 3984},
        {643 , 3965},
        {639 , 3948},
        {649 , 3936},
        {638 , 3921},
        {628 , 3906},
        {626 , 3892},
        {622 , 3877},
        {621 , 3864},
        {615 , 3852},
        {604 , 3841},
        {608 , 3832},
        {613 , 3823},
        {615 , 3814},
        {626 , 3808},
        {633 , 3802},
        {640 , 3795},
        {641 , 3789},
        {640 , 3785},
        {651 , 3782},
        {659 , 3779},
        {677 , 3777},
        {684 , 3772},
        {704 , 3769},
        {713 , 3765},
        {742 , 3759},
        {747 , 3752},
        {747 , 3742},
        {766 , 3734},
        {789 , 3719},
        {843 , 3706},
        {899 , 3695},
        {957 , 3690},
        {1064, 3683},
        {1178, 3670},
        {1129, 3650},
        {1064, 3624},
        {996 , 3597},
        {943 , 3576},
        {888 , 3554},
        {843 , 3536},
        {805 , 3520},
        {775 , 3509},
        {748 , 3498},
        {723 , 3488},
        {615 , 3444},
        {608 , 3441},
        {600 , 3438}
    },
    //ATL
    {
        {636 , 4349},
        {636 , 4349},
        {635 , 4317},
        {628 , 4292},
        {623 , 4268},
        {620 , 4247},
        {616 , 4225},
        {613 , 4204},
        {612 , 4184},
        {612 , 4163},
        {610 , 4143},
        {604 , 4122},
        {597 , 4103},
        {613 , 4088},
        {642 , 4075},
        {642 , 4048},
        {599 , 4008},
        {567 , 3980},
        {550 , 3960},
        {547 , 3946},
        {542 , 3934},
        {538 , 3922},
        {530 , 3908},
        {525 , 3894},
        {519 , 3881},
        {516 , 3868},
        {513 , 3857},
        {513 , 3846},
        {512 , 3837},
        {511 , 3828},
        {512 , 3820},
        {513 , 3812},
        {516 , 3806},
        {517 , 3800},
        {519 , 3794},
        {519 , 3789},
        {521 , 3784},
        {526 , 3781},
        {532 , 3777},
        {542 , 3774},
        {553 , 3770},
        {568 , 3765},
        {586 , 3759},
        {607 , 3751},
        {633 , 3743},
        {664 , 3732},
        {698 , 3720},
        {745 , 3709},
        {833 , 3703},
        {996 , 3698},
        {1305, 3685},
        {1557, 3621},
        {1311, 3523},
        {1136, 3453},
        {984 , 3393},
        {861 , 3342},
        {764 , 3303},
        {695 , 3275},
        {651 , 3258},
        {627 , 3248},
        {605 , 3241},
        {602 , 3237},
        {591 , 3233}
    },
    //LS
    {
        {662 , 4350},
        {662 , 4220},
        {843 , 4197},
        {550 , 4178},
        {561 , 4158},
        {593 , 4136},
        {571 , 4114},
        {601 , 4099},
        {751 , 4082},
        {844 , 4067},
        {828 , 4035},
        {798 , 3999},
        {791 , 3971},
        {794 , 3953},
        {616 , 3937},
        {786 , 3924},
        {562 , 3913},
        {559 , 3898},
        {630 , 3882},
        {749 , 3867},
        {794 , 3856},
        {793 , 3846},
        {784 , 3838},
        {620 , 3829},
        {574 , 3821},
        {577 , 3816},
        {581 , 3808},
        {585 , 3800},
        {599 , 3795},
        {611 , 3789},
        {624 , 3785},
        {639 , 3779},
        {656 , 3776},
        {662 , 3771},
        {662 , 3763},
        {680 , 3755},
        {686 , 3744},
        {693 , 3732},
        {706 , 3720},
        {728 , 3713},
        {767 , 3708},
        {827 , 3705},
        {918 , 3700},
        {1043, 3681},
        {1209, 3617},
        {1444, 3479},
        {5526, 3213},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166},
        {5411, 3166}
    }
};

// T2 25C
R_PROFILE_STRUC r_profile_t2[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {215, 4328},
        {215, 4299},
        {217, 4274},
        {218, 4252},
        {219, 4229},
        {221, 4208},
        {223, 4187},
        {219, 4165},
        {223, 4145},
        {226, 4125},
        {230, 4107},
        {231, 4087},
        {236, 4072},
        {245, 4058},
        {232, 4029},
        {235, 4003},
        {238, 3988},
        {246, 3977},
        {252, 3966},
        {249, 3952},
        {255, 3939},
        {256 , 3923},
        {250 , 3905},
        {232 , 3884},
        {219 , 3867},
        {216 , 3854},
        {216 , 3843},
        {212 , 3834},
        {213 , 3826},
        {216 , 3818},
        {217 , 3811},
        {219 , 3805},
        {220 , 3799},
        {222 , 3793},
        {226 , 3789},
        {229 , 3784},
        {229 , 3779},
        {226 , 3772},
        {221 , 3766},
        {216 , 3759},
        {219 , 3751},
        {219 , 3744},
        {221 , 3737},
        {223 , 3724},
        {221 , 3711},
        {220 , 3697},
        {226 , 3693},
        {231 , 3690},
        {245 , 3685},
        {248 , 3648},
        {259 , 3537},
        {323 , 3329},
        {274 , 3309},
        {250 , 3299},
        {229 , 3291},
        {213 , 3285},
        {206 , 3282},
        {198 , 3279},
        {190 , 3276},
        {197 , 3275},
        {192 , 3273},
        {193 , 3273},
        {191 , 3271}
    },
    //ATL
    {
        {261 , 4352},
        {261 , 4352},
        {250 , 4323},
        {244 , 4298},
        {243 , 4275},
        {242 , 4253},
        {242 , 4231},
        {242 , 4209},
        {244 , 4188},
        {246 , 4167},
        {247 , 4147},
        {247 , 4126},
        {249 , 4106},
        {247 , 4086},
        {244 , 4069},
        {271 , 4057},
        {273 , 4030},
        {255 , 4004},
        {246 , 3987},
        {254 , 3977},
        {260 , 3964},
        {264 , 3950},
        {266 , 3935},
        {261 , 3918},
        {243 , 3897},
        {225 , 3877},
        {215 , 3862},
        {210 , 3850},
        {208 , 3840},
        {207 , 3830},
        {205 , 3821},
        {205 , 3814},
        {206 , 3807},
        {207 , 3801},
        {208 , 3795},
        {209 , 3789},
        {209 , 3784},
        {210 , 3779},
        {208 , 3774},
        {205 , 3767},
        {201 , 3758},
        {200 , 3751},
        {198 , 3744},
        {203 , 3737},
        {211 , 3730},
        {213 , 3720},
        {219 , 3709},
        {205 , 3696},
        {195 , 3687},
        {209 , 3685},
        {253 , 3682},
        {417 , 3662},
        {604 , 3580},
        {1091, 3435},
        {504 , 3199},
        {410 , 3161},
        {340 , 3133},
        {274 , 3107},
        {234 , 3092},
        {218 , 3084},
        {211 , 3079},
        {200 , 3076},
        {189 , 3075}
    },
    //LS
    {
        {142 , 4351},
        {142 , 4306},
        {145 , 4282},
        {146 , 4259},
        {145 , 4237},
        {146 , 4215},
        {146 , 4194},
        {148 , 4174},
        {149 , 4153},
        {149 , 4133},
        {152 , 4113},
        {155 , 4094},
        {160 , 4076},
        {167 , 4064},
        {169 , 4041},
        {167 , 4013},
        {174 , 3994},
        {179 , 3984},
        {185 , 3973},
        {191 , 3959},
        {195 , 3945},
        {198 , 3932},
        {196 , 3916},
        {182 , 3896},
        {158 , 3873},
        {146 , 3857},
        {139 , 3844},
        {139 , 3834},
        {142 , 3825},
        {152 , 3817},
        {160 , 3810},
        {164 , 3803},
        {170 , 3797},
        {173 , 3792},
        {178 , 3787},
        {180 , 3783},
        {187 , 3779},
        {191 , 3776},
        {197 , 3774},
        {202 , 3772},
        {205 , 3769},
        {205 , 3763},
        {205 , 3756},
        {213 , 3749},
        {223 , 3740},
        {231 , 3724},
        {234 , 3709},
        {249 , 3695},
        {269 , 3691},
        {308 , 3688},
        {348 , 3684},
        {358 , 3668},
        {378 , 3578},
        {395 , 3404},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103},
        {2663, 3103}
    }
}; 

// T3 50C
R_PROFILE_STRUC r_profile_t3[TOTAL_BATTERY_NUMBER][ONE_BAT_STEPS_NUMBER] =
{
    //CC
    {
        {185, 4323},
        {185, 4295},
        {189, 4271},
        {184, 4248},
        {184, 4226},
        {188, 4206},
        {188, 4185},
        {187, 4162},
        {188, 4142},
        {189, 4123},
        {189, 4102},
        {192, 4083},
        {191, 4065},
        {192, 4047},
        {193, 4028},
        {195, 4011},
        {196, 3994},
        {201, 3980},
        {206, 3965},
        {203, 3950},
        {209, 3935},
        {216, 3922},
        {214, 3904},
        {199, 3882},
        {185, 3863},
        {187, 3852},
        {188, 3842},
        {189, 3832},
        {184, 3822},
        {189, 3816},
        {189, 3808},
        {190, 3800},
        {193, 3796},
        {195, 3790},
        {199, 3785},
        {205, 3780},
        {198, 3772},
        {186, 3758},
        {186, 3748},
        {184, 3739},
        {185, 3731},
        {185, 3723},
        {189, 3717},
        {185, 3704},
        {192, 3693},
        {185, 3678},
        {193, 3677},
        {195, 3673},
        {209, 3667},
        {200, 3614},
        {219, 3502},
        {223, 3289},
        {191, 3275},
        {179, 3271},
        {178, 3269},
        {178, 3263},
        {177, 3257},
        {177, 3252},
        {179, 3247},
        {177, 3241},
        {178, 3235},
        {178, 3227},
        {178, 3227}
    },
    //ATL
    {
        {240, 4349},
        {240, 4349},
        {230, 4321},
        {226, 4296},
        {225, 4273},
        {224, 4250},
        {224, 4228},
        {224, 4207},
        {224, 4185},
        {225, 4164},
        {224, 4144},
        {224, 4123},
        {225, 4103},
        {225, 4083},
        {225, 4064},
        {225, 4046},
        {225, 4028},
        {226, 4010},
        {226, 3993},
        {228, 3977},
        {231, 3962},
        {235, 3948},
        {241, 3933},
        {242, 3916},
        {222, 3893},
        {203, 3873},
        {198, 3860},
        {196, 3849},
        {193, 3839},
        {193, 3830},
        {192, 3821},
        {193, 3814},
        {193, 3807},
        {193, 3800},
        {195, 3794},
        {197, 3788},
        {198, 3783},
        {202, 3778},
        {205, 3769},
        {191, 3755},
        {191, 3747},
        {190, 3739},
        {189, 3732},
        {194, 3725},
        {201, 3717},
        {200, 3705},
        {204, 3695},
        {180, 3681},
        {185, 3678},
        {208, 3676},
        {322, 3669},
        {475, 3614},
        {812, 3508},
        {740, 3293},
        {380, 3148},
        {258, 3101},
        {224, 3085},
        {201, 3077},
        {192, 3075},
        {192, 3073},
        {184, 3070},
        {184, 3069},
        {174, 3067}
    },
    //LS
    {
        {71  , 4352},
        {71  , 4317},
        {72  , 4293},
        {73  , 4270},
        {73  , 4248},
        {72  , 4226},
        {74  , 4205},
        {74  , 4184},
        {73  , 4163},
        {74  , 4142},
        {74  , 4122},
        {74  , 4103},
        {77  , 4084},
        {78  , 4065},
        {80  , 4047},
        {81  , 4030},
        {82  , 4013},
        {84  , 3997},
        {86  , 3981},
        {89  , 3966},
        {93  , 3952},
        {95  , 3938},
        {104 , 3925},
        {114 , 3912},
        {121 , 3898},
        {102 , 3875},
        {74  , 3852},
        {72  , 3840},
        {69  , 3830},
        {71  , 3821},
        {69  , 3814},
        {71  , 3806},
        {72  , 3800},
        {74  , 3794},
        {76  , 3789},
        {78  , 3784},
        {81  , 3779},
        {82  , 3775},
        {86  , 3771},
        {84  , 3765},
        {69  , 3753},
        {72  , 3748},
        {72  , 3742},
        {73  , 3735},
        {73  , 3728},
        {72  , 3719},
        {72  , 3704},
        {77  , 3689},
        {72  , 3677},
        {76  , 3676},
        {82  , 3674},
        {97  , 3671},
        {97  , 3629},
        {127 , 3510},
        {414 , 3242},
        {1084, 3135},
        {1025, 3111},
        {983 , 3094},
        {928 , 3072},
        {849 , 3041},
        {764 , 3006},
        {691 , 2977},
        {691 , 2977}
    }
};

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}, 
        {0, 0}
};    
/*add by fubin1@yulong.com at 20150710 to support multi battery end.*/

// ============================================================
// function prototype
// ============================================================
int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);

#endif	//#ifndef _CUST_BATTERY_METER_TABLE_H

